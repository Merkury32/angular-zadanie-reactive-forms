{"version":3,"sources":["./src/app/app.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,g2D;;;;;;;;;;;ACAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACZA;AAAe,4EAAa,qBAAqB,GAAG,+CAA+C,+Q;;;;;;;;;;;;;;;;;;;;;;;;;ACAjD;AACkB;AAQpE;IAAA;IAiCA,CAAC;qBAjCY,YAAY;IAGvB,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,aAAa,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,cAAY,CAAC,kBAAkB,CAAC,EAAE,cAAY,CAAC,wBAAwB,CAAC;YACnI,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACvE,eAAe,EAAE,IAAI,0DAAW,CAAC,UAAU,CAAC;SAC7C,CAAC;IACJ,CAAC;IAED,kCAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAEM,+BAAkB,GAAzB,UAA0B,OAAoB;QAC5C,IAAI,OAAO,CAAC,KAAK,KAAK,MAAM,EAAE;YAC5B,OAAO,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC;SACrC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,qCAAwB,GAA/B,UAAgC,OAAoB;QAClD,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC1C,UAAU,CAAC;gBACT,IAAG,OAAO,CAAC,KAAK,KAAK,OAAO,EAAE;oBAC5B,OAAO,CAAC,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;iBACvC;gBACD,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,EAAC,IAAI,CAAC;QACT,CAAC,CAAC;QACF,OAAO,OAAO,CAAC;IACjB,CAAC;;IAhCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mKAAmC;;SAEpC,CAAC;OACW,YAAY,CAiCxB;IAAD,mBAAC;CAAA;AAjCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACY;AAGN;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,kEAAmB;aACpB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBtB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;;;;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\n      <!--\\n          Create a Form with the following Controls and Validators\\n          1) Project Name (should not be empty)\\n          2) Mail (should not be a empty and a valid email)\\n          3) Project Status Dropdown, with three values: 'Stable', 'Critical', 'Finished'\\n          4) Submit Button\\n\\n          Add your own Validator which doesn't allow \\\"Test\\\" as a Project Name\\n\\n          Also implement that Validator as an async Validator (replace the other one)\\n\\n          Upon submitting the form, simply print the value to the console\\n      -->\\n      <form [formGroup]=\\\"projectForm\\\" (ngSubmit)=\\\"saveProject()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Project Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"name\\\"\\n            formControlName=\\\"projectName\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input\\n            type=\\\"email\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"email\\\"\\n            formControlName=\\\"email\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\">Project status</label>\\n          <select\\n            id=\\\"status\\\"\\n            class=\\\"form-control\\\"\\n            formControlName=\\\"projectStatus\\\">\\n            <option value=\\\"stable\\\">Stable</option>\\n            <option value=\\\"critical\\\">Critical</option>\\n            <option value=\\\"finished\\\">Finished</option>\\n          </select>\\n        </div>\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Create</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \".container {\\n  margin-top: 30px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  projectForm: FormGroup;\n\n  ngOnInit() {\n    this.projectForm = new FormGroup({\n      'projectName': new FormControl(null, [Validators.required, AppComponent.invalidProjectName], AppComponent.asyncVInvalidProjectName),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'projectStatus': new FormControl('critical'),\n    })\n  }\n\n  saveProject() {\n    console.log(this.projectForm.value);\n  }\n\n  static invalidProjectName(control: FormControl): {[s: string]: boolean} {\n    if (control.value === 'Test') {\n      return {'invalidProjectName': true};\n    }\n    return null;\n  }\n\n  static asyncVInvalidProjectName(control: FormControl): Promise<any> | Observable<any> {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if(control.value === 'Test2') {\n          resolve({'invalidProjectName': true});\n        }\n        resolve(null);\n      },2000)\n    })\n    return promise;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}